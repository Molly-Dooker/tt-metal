name: "[internal] C++ tests impl"

on:
  workflow_call:
    inputs:
      arch:
        required: true
        type: string
      runner-label:
        required: true
        type: string
      timeout:
        required: false
        type: number
        default: 80
  workflow_dispatch:
    inputs:
      arch:
        required: true
        type: choice
        options:
          - grayskull
          - wormhole_b0
          - blackhole
      runner-label:
        required: true
        type: choice
        options:
          - E150
          - N150
          - N300
          - BH
      timeout:
        required: false
        type: number
        default: 60

jobs:
  models:
    strategy:
      # Do not fail-fast because we need to ensure all tests go to completion
      # so we try not to get hanging machines
      fail-fast: false
      matrix:
        test-group: [
          {name: C++, cmd: ./tests/scripts/run_cpp_unit_tests.sh},
          {name: ttnn cpp tests, cmd: ./build/test/ttnn/unit_tests_ttnn},
          {name: ttnn ccl cpp unit tests, cmd: ./build/test/ttnn/unit_tests_ttnn_ccl},
        ]
    name: ${{ matrix.test-group.name }} ${{ inputs.arch }} ${{ inputs.runner-label }}
    env:
      TT_METAL_ENV: ${{ vars.TT_METAL_ENV }}
      ARCH_NAME: ${{ inputs.arch }}
      LOGURU_LEVEL: INFO
      LD_LIBRARY_PATH: ${{ github.workspace }}/build/lib
    runs-on:
      - ${{ inputs.runner-label }}
      - cloud-virtual-machine
      - in-service
    steps:
      - uses: tenstorrent/tt-metal/.github/actions/checkout-with-submodule-lfs@main
      - name: Set up dynamic env vars for build
        run: |
          echo "TT_METAL_HOME=$(pwd)" >> $GITHUB_ENV
      - uses: ./.github/actions/prepare-metal-run
        with:
          arch: ${{ inputs.arch }}
      - name: ${{ matrix.test-group.name }} tests
        if: ${{ !(inputs.arch == 'grayskull' && matrix.test-group.name == 'ttnn ccl cpp unit tests') }}
        timeout-minutes: ${{ inputs.timeout }}
        run: |
          source ${{ github.workspace }}/python_env/bin/activate
          cd $TT_METAL_HOME
          export PYTHONPATH=$TT_METAL_HOME
          ${{ matrix.test-group.cmd }}
      - uses: ./.github/actions/slack-report
        if: ${{ failure() }}
        with:
          slack_webhook_url: ${{ secrets.SLACK_WEBHOOK_URL }}
          owner: U06CXU895AP # Michael Chiou
      - name: Generate system logs on failure
        uses: ./.github/actions/generate-system-logs
        if: ${{ failure() }}
