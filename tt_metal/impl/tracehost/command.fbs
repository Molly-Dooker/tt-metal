// Define schema for tracing host API calls, called Commands in this context.
include "tracehost/types.fbs";

namespace tt.target;

table ReplayTraceCommand {
    // FIXME Device.
    cq_id: int;
    tid: int;
    blocking: bool;
}

table EnqueueTraceCommand {
    // FIXME Device.
    cq_id: int;
    tid: int;
    blocking: bool;
}

table LoadTraceCommand {
    tid: int; // Pointer to trace data.
    cq_id: int;
}

table CreateBufferCommand {
    global_id: uint32;
    config: InterleavedBufferConfig; // Later grow to union for Sharded.
    address: uint32; // Optional for pre-allocated buffers.
}

table EnqueueWriteBufferCommand {
    cq_global_id: uint32;       // reference to CommandQueue
    buffer_global_id: uint32;   // Reference to Buffer used as destination
    src: [uint32];              // Data to be written. Support only some types for now.
    blocking: bool;
}

table EnqueueReadBufferCommand {
    cq_global_id: uint32;       // reference to CommandQueue
    buffer_global_id: uint32;   // Reference to Buffer used as source
    // dst unsure what to do here.
    blocking: bool;
}

table FinishCommand {
    cq_global_id: uint32;       // reference to CommandQueue
}

union CommandType {
    ReplayTraceCommand,
    EnqueueTraceCommand,
    LoadTraceCommand,
    CreateBufferCommand,
    EnqueueWriteBufferCommand,
    EnqueueReadBufferCommand,
    FinishCommand
}

table Command {
    cmd: CommandType;
}
